<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>java-machine-learning</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.2.6.RELEASE</version>
    </parent>

    <properties>
        <spring-boot.version>2.2.6.RELEASE</spring-boot.version>
        <codehaus.mojo.version>1.6.0</codehaus.mojo.version>
        <java.version>11</java.version> <!-- 11 is the lowest supported java version, however 12 and 13 should work fine -->
        <jna.version>5.3.0</jna.version> <!-- Required to override default JNA version for Spring Boot parent-->
        <djl.version>0.9.0</djl.version>
        <djl-repository.version>0.4.1</djl-repository.version>
        <djl-mxnet-native.version>1.7.0-b</djl-mxnet-native.version>
        <djl-tensorflow-native.version>2.3.1</djl-tensorflow-native.version>
        <djl.starter.version>0.7</djl.starter.version>
        <log4j.version>2.12.1</log4j.version>
        <commons-cli.version>1.4</commons-cli.version>
        <lombok.version>1.18.0</lombok.version>
        <commons-csv.version>1.8</commons-csv.version>
        <opencv.version>4.3.0-3</opencv.version>
        <tablesaw-core.version>0.38.1</tablesaw-core.version>
        <dozer.version>5.5.1</dozer.version>
        <junit.version>4.12</junit.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>ng</executable>
                    <workingDirectory>src/main/resources/frontend/djl-app</workingDirectory>
                    <arguments>
                        <argument>build</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Deep Java Library -->
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>api</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>repository</artifactId>
            <version>${djl-repository.version}</version>
        </dependency>

        <!-- DJL silniki -->
        <dependency>  <!-- potrzebny zawsze native do działania engine'a -->
            <groupId>ai.djl.mxnet</groupId>
            <artifactId>mxnet-native-auto</artifactId>
            <version>${djl-mxnet-native.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>ai.djl.mxnet</groupId>
            <artifactId>mxnet-engine</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <dependency>
            <groupId>ai.djl.tensorflow</groupId>
            <artifactId>tensorflow-native-auto</artifactId>
            <version>${djl-tensorflow-native.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>ai.djl.tensorflow</groupId>
            <artifactId>tensorflow-engine</artifactId>
            <version>${djl.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- DJL modele -->
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>model-zoo</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <dependency>
            <groupId>ai.djl.mxnet</groupId>
            <artifactId>mxnet-model-zoo</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <dependency>
            <groupId>ai.djl.tensorflow</groupId>
            <artifactId>tensorflow-model-zoo</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <!-- Basic datasets -->
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>basicdataset</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <!-- Spring Boot -->
        <!-- ściąga djl.api w wersji startera -->
        <dependency>
            <groupId>ai.djl.spring</groupId>
            <artifactId>djl-spring-boot-starter-autoconfigure</artifactId>
            <version>${djl.starter.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${spring-boot.version}</version>
            <optional>true</optional>
        </dependency>


        <!-- dodatkowe -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${commons-csv.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openpnp</groupId>
            <artifactId>opencv</artifactId>
            <version>${opencv.version}</version>
        </dependency>

        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-core</artifactId>
            <version>${tablesaw-core.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>${dozer.version}</version>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>